@model BlueSpatial.Models.FeatureLayerInfo

<div id="message-container">
</div>
<div class="div-padding-top">
    <div>
        Download:
        <a href="./@Model.id/GenerateKml">KMZ</a> |
        <a href="./@Model.id/Query?f=shp&outFields=*">Shape</a> |
        <a href="./@Model.id/Query?returnFile=true&f=geojson&outFields=*">GeoJSON</a> |
        <a href="./@Model.id/query?outSR=4326&returnFile=true&outFields=*&f=csv">CSV</a>
    </div>
    <div>
        Links:
        <a target="_blank" href="/MapPreview/Map.html?layer=@Request.Url.ToString()">View Layer</a> |
        @if (Model.isOdataEnabled)
        {
            <a target="_blank" href="/odata/layers/@Model.name?$top=20">OData</a> <span>|</span>
        }
        @*<a target="_blank" href="/Tableau/WebDataConnector.html?layer=@Request.Url.ToString()">Tableau Web Data Connector</a>*@
        <script>
            function copyTextToClipboard(text = location.protocol + '//' + location.host + '/' + "Tableau/WebDataConnector.html?layer=@Request.Url.ToString()") {
                var textArea = document.createElement("textarea");

                //
                // *** This styling is an extra step which is likely not required. ***
                //
                // Why is it here? To ensure:
                // 1. the element is able to have focus and selection.
                // 2. if element was to flash render it has minimal visual impact.
                // 3. less flakyness with selection and copying which **might** occur if
                //    the textarea element is not visible.
                //
                // The likelihood is the element won't even render, not even a flash,
                // so some of these are just precautions. However in IE the element
                // is visible whilst the popup box asking the user for permission for
                // the web page to copy to the clipboard.
                //

                // Place in top-left corner of screen regardless of scroll position.
                textArea.style.position = 'fixed';
                textArea.style.top = 0;
                textArea.style.left = 0;

                // Ensure it has a small width and height. Setting to 1px / 1em
                // doesn't work as this gives a negative w/h on some browsers.
                textArea.style.width = '2em';
                textArea.style.height = '2em';

                // We don't need padding, reducing the size if it does flash render.
                textArea.style.padding = 0;

                // Clean up any borders.
                textArea.style.border = 'none';
                textArea.style.outline = 'none';
                textArea.style.boxShadow = 'none';

                // Avoid flash of white box if rendered for any reason.
                textArea.style.background = 'transparent';


                textArea.value = text;

                document.body.appendChild(textArea);
                textArea.focus();
                textArea.select();

                try {
                    var successful = document.execCommand('copy');
                    if (successful) {
                        $('#message-container')[0].innerHTML = '<div id="message" class="fade-in-up alert custom-alert alert-success alert-dismissible"><button type="button" data-dismiss="alert" class="close"><span>&times;</span></button><span id="message-content"></span></div>';
                        $('#message-content')[0].innerText = "URL '" + text + "' copied to the clipboard!";
                        setTimeout(function () {
                            $('#message').css("display", "none");
                        },2000)
                    }
                } catch (err) {
                    console.log('Oops, unable to copy');
                }

                document.body.removeChild(textArea);
            }
        </script>
        <button onclick="copyTextToClipboard()" class="btn btn-primary btn-sm blue btn-outline"><span class="glyphicons glyphicons-copy"></span> Copy Tableau WDC URL</button>
    </div>

    <div><strong>Name:</strong> @Model.name</div>
    <div><strong>Display Field:</strong> @Model.displayField</div>
    <div><strong>Type:</strong> @Model.type</div>
    <div><strong>Geometry Type:</strong> @Model.geometryType</div>
    @*<div><strong>Description:</strong> @Model.description</div>
        <div><strong>Copyright Text:</strong> @Model.copyrightText</div>*@
    <div><strong>Min. Scale:</strong> @Model.minScale</div>
    <div><strong>Max. Scale:</strong> @Model.maxScale</div>
    <div><strong>Default Visibility:</strong> @Model.defaultVisibility</div>
    <div><strong>Max Record Count:</strong> @Model.maxRecordCount</div>
    <div><strong>Supported query Formats:</strong> @Model.supportedQueryFormats</div>
    <div><strong>Use Standardized Queries:</strong> @Model.useStandardizedQueries</div>
    <div>
        <strong>Extent:</strong>
        @Html.Partial("_EnvelopePatial", Model.extent)
    </div>
    <div><strong>Drawing Info:</strong><span class="formatted-json"> @(Newtonsoft.Json.JsonConvert.SerializeObject(Model.drawingInfo, Newtonsoft.Json.Formatting.Indented).Replace("\"", "")) </span></div>
    @*<div><strong>HasZ:</strong> </div>
        <div><strong>HasM:</strong> </div>*@
    <div><strong>Has Attachments:</strong> @Model.hasAttachments</div>
    <div><strong>HTML Popup Type:</strong> @Model.htmlPopupType</div>
    @*<div><strong>Object ID Field::</strong> </div>*@
    <div><strong>Type ID Field:</strong> @Model.typeIdField</div>
    <div>
        <strong>Fields:</strong>
        <ul>
            @foreach (var field in Model.fields)
            {
                <li>@(string.Format("{0} (type: {1}, alias: {2}, length: {3}, nullable: {4}, editable: {5})", field.name, field.type, field.alias, field.length, field.nullable, field.editable))</li>
                @*<li>@($"{field.name} (type: {field.type}, alias: {field.alias}, length: {field.length}, nullable: {field.nullable}, editable: {field.editable})")</li>*@
            }
        </ul>
    </div>
    @*<div><strong>Templates: </strong> </div>
        <div><strong>Is Data Versioned: </strong> </div>
        <div><strong>Supports Rollback On Failure Parameter: </strong> </div>
        <div><strong>Last Edited: </strong> </div>*@
    <div><strong>Supported Operations: </strong>@Model.capabilities.Replace(",", ", ")</div>

</div>

